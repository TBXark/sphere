// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "roles", Type: field.TypeJSON},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
	}
	// KeyValueStoresColumns holds the columns for the "key_value_stores" table.
	KeyValueStoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true},
		{Name: "key", Type: field.TypeString, Unique: true},
		{Name: "value", Type: field.TypeBytes, Nullable: true},
	}
	// KeyValueStoresTable holds the schema information for the "key_value_stores" table.
	KeyValueStoresTable = &schema.Table{
		Name:       "key_value_stores",
		Columns:    KeyValueStoresColumns,
		PrimaryKey: []*schema.Column{KeyValueStoresColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true},
		{Name: "username", Type: field.TypeString},
		{Name: "remark", Type: field.TypeString, Nullable: true, Size: 30, Default: ""},
		{Name: "avatar", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Nullable: true, Size: 20, Default: ""},
		{Name: "flags", Type: field.TypeUint64, Default: 0},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserPlatformsColumns holds the columns for the "user_platforms" table.
	UserPlatformsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "platform", Type: field.TypeString},
		{Name: "platform_id", Type: field.TypeString},
		{Name: "second_id", Type: field.TypeString, Nullable: true, Default: ""},
	}
	// UserPlatformsTable holds the schema information for the "user_platforms" table.
	UserPlatformsTable = &schema.Table{
		Name:       "user_platforms",
		Columns:    UserPlatformsColumns,
		PrimaryKey: []*schema.Column{UserPlatformsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userplatform_platform_platform_id",
				Unique:  false,
				Columns: []*schema.Column{UserPlatformsColumns[4], UserPlatformsColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		KeyValueStoresTable,
		UsersTable,
		UserPlatformsTable,
	}
)

func init() {
}

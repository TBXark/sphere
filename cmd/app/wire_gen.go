// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/tbxark/sphere/internal/biz/task"
	"github.com/tbxark/sphere/internal/config"
	"github.com/tbxark/sphere/internal/pkg/dao"
	"github.com/tbxark/sphere/internal/pkg/database/client"
	api2 "github.com/tbxark/sphere/internal/server/api"
	dash2 "github.com/tbxark/sphere/internal/server/dash"
	"github.com/tbxark/sphere/internal/server/docs"
	"github.com/tbxark/sphere/internal/service/api"
	"github.com/tbxark/sphere/internal/service/dash"
	"github.com/tbxark/sphere/pkg/cache/memory"
	"github.com/tbxark/sphere/pkg/storage/qiniu"
	"github.com/tbxark/sphere/pkg/utils/boot"
	"github.com/tbxark/sphere/pkg/wechat"
)

// Injectors from wire.go:

func NewApplication(conf *config.Config) (*boot.Application, error) {
	dashConfig := conf.Dash
	clientConfig := conf.Database
	entClient, err := client.NewDataBaseClient(clientConfig)
	if err != nil {
		return nil, err
	}
	daoDao := dao.NewDao(entClient)
	wechatConfig := conf.WxMini
	wechatWechat := wechat.NewWechat(wechatConfig)
	qiniuConfig := conf.Storage
	qiniuQiniu := qiniu.NewQiniu(qiniuConfig)
	cache := memory.NewByteCache()
	service := dash.NewService(daoDao, wechatWechat, qiniuQiniu, cache)
	web := dash2.NewWebServer(dashConfig, service)
	apiConfig := conf.API
	apiService := api.NewService(daoDao, wechatWechat, qiniuQiniu, cache)
	apiWeb := api2.NewWebServer(apiConfig, apiService)
	docsConfig := conf.Docs
	docsWeb := docs.NewWebServer(docsConfig)
	dashInitialize := task.NewDashInitialize(daoDao)
	connectCleaner := task.NewConnectCleaner(entClient)
	application := newApplication(web, apiWeb, docsWeb, dashInitialize, connectCleaner)
	return application, nil
}

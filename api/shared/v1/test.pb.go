// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: shared/v1/test.proto

package sharedv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldTest1 string `protobuf:"bytes,1,opt,name=field_test1,json=fieldTest1,proto3" json:"field_test1,omitempty"`
	FieldTest2 int64  `protobuf:"varint,2,opt,name=field_test2,json=fieldTest2,proto3" json:"field_test2,omitempty"`
	PathTest1  string `protobuf:"bytes,3,opt,name=path_test1,json=pathTest1,proto3" json:"-" uri:"path_test1"`      
	PathTest2  int64  `protobuf:"varint,4,opt,name=path_test2,json=pathTest2,proto3" json:"-" uri:"path_test2"`     
	QueryTest1 string `protobuf:"bytes,5,opt,name=query_test1,json=queryTest1,proto3" json:"-" form:"query_test1"`   
	QueryTest2 int64  `protobuf:"varint,6,opt,name=query_test2,json=queryTest2,proto3" json:"-" form:"query_test2"`  
}

func (x *RunTestRequest) Reset() {
	*x = RunTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_v1_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTestRequest) ProtoMessage() {}

func (x *RunTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_v1_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTestRequest.ProtoReflect.Descriptor instead.
func (*RunTestRequest) Descriptor() ([]byte, []int) {
	return file_shared_v1_test_proto_rawDescGZIP(), []int{0}
}

func (x *RunTestRequest) GetFieldTest1() string {
	if x != nil {
		return x.FieldTest1
	}
	return ""
}

func (x *RunTestRequest) GetFieldTest2() int64 {
	if x != nil {
		return x.FieldTest2
	}
	return 0
}

func (x *RunTestRequest) GetPathTest1() string {
	if x != nil {
		return x.PathTest1
	}
	return ""
}

func (x *RunTestRequest) GetPathTest2() int64 {
	if x != nil {
		return x.PathTest2
	}
	return 0
}

func (x *RunTestRequest) GetQueryTest1() string {
	if x != nil {
		return x.QueryTest1
	}
	return ""
}

func (x *RunTestRequest) GetQueryTest2() int64 {
	if x != nil {
		return x.QueryTest2
	}
	return 0
}

type RunTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldTest1 string `protobuf:"bytes,1,opt,name=field_test1,json=fieldTest1,proto3" json:"field_test1,omitempty"`
	FieldTest2 int64  `protobuf:"varint,2,opt,name=field_test2,json=fieldTest2,proto3" json:"field_test2,omitempty"`
	PathTest1  string `protobuf:"bytes,3,opt,name=path_test1,json=pathTest1,proto3" json:"path_test1,omitempty"`
	PathTest2  int64  `protobuf:"varint,4,opt,name=path_test2,json=pathTest2,proto3" json:"path_test2,omitempty"`
	QueryTest1 string `protobuf:"bytes,5,opt,name=query_test1,json=queryTest1,proto3" json:"query_test1,omitempty"`
	QueryTest2 int64  `protobuf:"varint,6,opt,name=query_test2,json=queryTest2,proto3" json:"query_test2,omitempty"`
}

func (x *RunTestResponse) Reset() {
	*x = RunTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_v1_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTestResponse) ProtoMessage() {}

func (x *RunTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_v1_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTestResponse.ProtoReflect.Descriptor instead.
func (*RunTestResponse) Descriptor() ([]byte, []int) {
	return file_shared_v1_test_proto_rawDescGZIP(), []int{1}
}

func (x *RunTestResponse) GetFieldTest1() string {
	if x != nil {
		return x.FieldTest1
	}
	return ""
}

func (x *RunTestResponse) GetFieldTest2() int64 {
	if x != nil {
		return x.FieldTest2
	}
	return 0
}

func (x *RunTestResponse) GetPathTest1() string {
	if x != nil {
		return x.PathTest1
	}
	return ""
}

func (x *RunTestResponse) GetPathTest2() int64 {
	if x != nil {
		return x.PathTest2
	}
	return 0
}

func (x *RunTestResponse) GetQueryTest1() string {
	if x != nil {
		return x.QueryTest1
	}
	return ""
}

func (x *RunTestResponse) GetQueryTest2() int64 {
	if x != nil {
		return x.QueryTest2
	}
	return 0
}

var File_shared_v1_test_proto protoreflect.FileDescriptor

var file_shared_v1_test_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd2, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x65, 0x73, 0x74,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65,
	0x73, 0x74, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x65, 0x73,
	0x74, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x65, 0x73, 0x74, 0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x73,
	0x74, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68, 0x54, 0x65,
	0x73, 0x74, 0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x73, 0x74,
	0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68, 0x54, 0x65, 0x73,
	0x74, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x73, 0x74,
	0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x65,
	0x73, 0x74, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x73,
	0x74, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x65, 0x73, 0x74, 0x32, 0x22, 0xd3, 0x01, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x73, 0x74, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x73, 0x74, 0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x74, 0x68, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x74, 0x68, 0x54, 0x65, 0x73, 0x74, 0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74,
	0x68, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x61, 0x74, 0x68, 0x54, 0x65, 0x73, 0x74, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x65, 0x73, 0x74, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x65, 0x73, 0x74, 0x32, 0x32, 0xbb, 0x01, 0x0a, 0x0b, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xab, 0x01, 0x0a, 0x07, 0x52,
	0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75,
	0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x63, 0x3a, 0x01, 0x2a, 0x22, 0x5e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x65, 0x73, 0x74, 0x2f, 0x7b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x31, 0x7d,
	0x2f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x2f, 0x7b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x65,
	0x73, 0x74, 0x32, 0x7d, 0x3f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x31,
	0x3d, 0x7b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x31, 0x7d, 0x26, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x32, 0x3d, 0x7b, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x32, 0x7d, 0x42, 0x90, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x54, 0x65, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x62, 0x78, 0x61, 0x72, 0x6b, 0x2f, 0x73, 0x70, 0x68, 0x65, 0x72,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x3b,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02,
	0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_shared_v1_test_proto_rawDescOnce sync.Once
	file_shared_v1_test_proto_rawDescData = file_shared_v1_test_proto_rawDesc
)

func file_shared_v1_test_proto_rawDescGZIP() []byte {
	file_shared_v1_test_proto_rawDescOnce.Do(func() {
		file_shared_v1_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_v1_test_proto_rawDescData)
	})
	return file_shared_v1_test_proto_rawDescData
}

var file_shared_v1_test_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_shared_v1_test_proto_goTypes = []interface{}{
	(*RunTestRequest)(nil),  // 0: shared.v1.RunTestRequest
	(*RunTestResponse)(nil), // 1: shared.v1.RunTestResponse
}
var file_shared_v1_test_proto_depIdxs = []int32{
	0, // 0: shared.v1.TestService.RunTest:input_type -> shared.v1.RunTestRequest
	1, // 1: shared.v1.TestService.RunTest:output_type -> shared.v1.RunTestResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_shared_v1_test_proto_init() }
func file_shared_v1_test_proto_init() {
	if File_shared_v1_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shared_v1_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_v1_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_v1_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shared_v1_test_proto_goTypes,
		DependencyIndexes: file_shared_v1_test_proto_depIdxs,
		MessageInfos:      file_shared_v1_test_proto_msgTypes,
	}.Build()
	File_shared_v1_test_proto = out.File
	file_shared_v1_test_proto_rawDesc = nil
	file_shared_v1_test_proto_goTypes = nil
	file_shared_v1_test_proto_depIdxs = nil
}

// Code generated by protoc-gen-sphere. DO NOT EDIT.
// versions:
// - protoc             (unknown)
// source: api/v1/system.proto

package apiv1

import (
	context "context"
	gin "github.com/gin-gonic/gin"
	ginx "github.com/tbxark/sphere/pkg/server/ginx"
)

var _ = new(context.Context)
var _ = new(gin.Context)
var _ = new(ginx.DataResponse[string])

type SystemServiceHTTPServer interface {
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
}

// @Summary Status
// @Description Status
// @Tags api.v1
// @Accept json
// @Produce json
// @Param Authorization header string false "Bearer token"
// @Success 200 {object} ginx.DataResponse[StatusResponse]
// @Router /api/status [get]
func _SystemService_Status0_HTTP_Handler(srv SystemServiceHTTPServer) func(ctx *gin.Context) {
	return ginx.WithJson(func(ctx *gin.Context) (*StatusResponse, error) {
		var in StatusRequest
		out, err := srv.Status(ctx, &in)
		if err != nil {
			return nil, err
		}
		return out, nil
	})
}

func RegisterSystemServiceHTTPServer(route gin.IRouter, srv SystemServiceHTTPServer) {
	r := route.Group("/")
	r.GET("/api/status", _SystemService_Status0_HTTP_Handler(srv))
}

---
- name: Check if the binary exists locally
  become: false
  ansible.builtin.stat:
    path: "{{ build_dir }}/{{ binary_name }}"
  delegate_to: localhost
  register: local_binary_stat

- name: Check remote files
  ansible.builtin.stat:
    path: "{{ item.path }}"
  loop:
    - { path: "{{ deploy_dir }}/{{ binary_name }}", register: remote_binary_stat }
    - { path: "/etc/systemd/system/{{ systemd_name }}.service", register: remote_systemd_stat }
  register: remote_stats

- name: Copy binary to deploy directory
  become: true
  ansible.builtin.copy:
    src: "{{ build_dir }}/{{ binary_name }}"
    dest: "{{ deploy_dir }}/{{ binary_name }}"
    mode: '0755'
  when: >
    not remote_stats.results[0].stat.exists or
    remote_stats.results[0].stat.checksum != local_binary_stat.stat.checksum
  notify: Restart service

- name: Ensure systemd service file exists
  become: true
  ansible.builtin.template:
    src: "backend.service.j2"
    dest: "/etc/systemd/system/{{ systemd_name }}.service"
    mode: '0644'
  when: not remote_stats.results[1].stat.exists or force_overwrite | default(false)
  notify: Restart service

- name: Ensure service is enabled and started
  become: true
  ansible.builtin.systemd:
    name: "{{ systemd_name }}"
    state: started
    enabled: true
    daemon_reload: true
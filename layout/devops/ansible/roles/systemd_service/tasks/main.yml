- name: check binary exists
  ansible.builtin.stat:
    path: "{{ local_bin_path }}"
  register: bin_file

- name: check configuration file exists
  ansible.builtin.stat:
    path: "{{ local_config_path }}"
  register: config_file

- name: ensure group exists
  ansible.builtin.group:
    name: "{{ service_group }}"
    state: present
    system: yes
  when: create_system_user

- name: create system users and groups
  ansible.builtin.user:
    name: "{{ service_user }}"
    group: "{{ service_group }}"
    system: yes
    shell: /usr/sbin/nologin
    create_home: false
  when: create_system_user

- name: create configuration directory
  ansible.builtin.file:
    path: "{{ conf_dir }}"
    state: directory
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: "0750"

- name: upload binary file
  ansible.builtin.copy:
    src: "{{ local_bin_path }}"
    dest: "{{ remote_bin_path }}"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: "0755"
    backup: yes
  when: bin_file.stat.exists
  notify: restart service

- name: upload configuration file
  ansible.builtin.copy:
    src: "{{ local_config_path }}"
    dest: "{{ conf_dir }}/{{ conf_file }}"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: "0750"
    backup: yes
  when: config_file.stat.exists
  notify: restart service

- name: deploy systemd service file
  ansible.builtin.template:
    src: systemd.service.j2
    dest: "/etc/systemd/system/{{ unit_name }}.service"
    mode: "0644"
  notify:
    - reload systemd
    - enable systemd
    - restart service
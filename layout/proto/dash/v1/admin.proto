syntax = "proto3";

package dash.v1;

import "buf/validate/validate.proto";
import "entpb/entpb.proto";
import "google/api/annotations.proto";
import "sphere/errors/errors.proto";

service AdminService {
  rpc AdminList(AdminListRequest) returns (AdminListResponse) {
    option (google.api.http) = {get: "/api/admin/list"};
  }
  rpc AdminCreate(AdminCreateRequest) returns (AdminCreateResponse) {
    option (google.api.http) = {
      post: "/api/admin/create"
      body: "*"
    };
  }
  rpc AdminUpdate(AdminUpdateRequest) returns (AdminUpdateResponse) {
    option (google.api.http) = {
      post: "/api/admin/update"
      body: "*"
    };
  }
  rpc AdminDetail(AdminDetailRequest) returns (AdminDetailResponse) {
    option (google.api.http) = {get: "/api/admin/detail/{id}"};
  }
  rpc AdminDelete(AdminDeleteRequest) returns (AdminDeleteResponse) {
    option (google.api.http) = {delete: "/api/admin/delete/{id}"};
  }

  rpc AdminRoleList(AdminRoleListRequest) returns (AdminRoleListResponse) {
    option (google.api.http) = {get: "/api/admin/role/list"};
  }
}

message AdminListRequest {
  int64 page = 1 [(buf.validate.field).int64.gte = 0]; // @sphere:form
  int64 page_size = 2 [(buf.validate.field).int64.gte = 0]; // @sphere:form
}

message AdminListResponse {
  repeated entpb.Admin admins = 1;
  int64 total_size = 2;
  int64 total_page = 3;
}

message AdminCreateRequest {
  entpb.Admin admin = 1;
}

message AdminCreateResponse {
  entpb.Admin admin = 1;
}

message AdminUpdateRequest {
  entpb.Admin admin = 1;
}

message AdminUpdateResponse {
  entpb.Admin admin = 1;
}

message AdminDetailRequest {
  int64 id = 1; // @sphere:uri
}

message AdminDetailResponse {
  entpb.Admin admin = 1;
}

message AdminDeleteRequest {
  int64 id = 1; // @sphere:uri
}

message AdminDeleteResponse {}

message AdminRoleListRequest {}

message AdminRoleListResponse {
  repeated string roles = 1;
}

enum AdminError {
  option (sphere.errors.default_status) = 500;
  UNKNOWN_ADMIN_ERROR = 0;
  PASSWORD_TOO_SHORT = 1000 [(sphere.errors.options) = {
    status: 400
    message: "密码长度不能小于8位"
  }];
  CANNOT_DELETE_SELF = 1001 [(sphere.errors.options) = {
    status: 400
    message: "不能删除当前登录的管理员账号"
  }];
}
